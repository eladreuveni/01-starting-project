{"ast":null,"code":"var _jsxFileName = \"/home/elad/projects/01-starting-project/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.show);\n  const dispatch = useDispatch();\n  const sendDispatch = actionType = {};\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: show ? counter : \"counter not showing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: COUNTER_ACTIONS.CUSTOM_INCREMENT,\n          amount: 5\n        }),\n        children: \"Super Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: COUNTER_ACTIONS.INCREMENT\n        }),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: COUNTER_ACTIONS.DECREMENT\n        }),\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: COUNTER_ACTIONS.TOGGLE_SHOW\n      }),\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"6LcjmzGwbakCfSm2kUDyfwG8ChU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/home/elad/projects/01-starting-project/src/components/Counter.js"],"names":["useSelector","useDispatch","COUNTER_ACTIONS","classes","Counter","counter","state","show","dispatch","sendDispatch","actionType","value","type","CUSTOM_INCREMENT","amount","INCREMENT","DECREMENT","TOGGLE_SHOW"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,OAAO,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;AACA,QAAME,IAAI,GAAGP,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,YAAY,GAAGC,UAAU,GAAG,EAAlC;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEP,OAAO,CAACE,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACQ,KAAxB;AAAA,gBACGJ,IAAI,GAAGF,OAAH,GAAa;AADpB;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAEV,eAAe,CAACW,gBAAxB;AAA0CC,UAAAA,MAAM,EAAE;AAAlD,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAMN,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAEV,eAAe,CAACa;AAAxB,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAMP,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAEV,eAAe,CAACc;AAAxB,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAgBE;AAAQ,MAAA,OAAO,EAAE,MAAMR,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEV,eAAe,CAACe;AAAxB,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA/BD;;GAAMb,O;UACYJ,W,EACHA,W,EACIC,W;;;KAHbG,O;AAiCN,eAAeA,OAAf","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  const counter = useSelector((state) => state.counter);\n  const show = useSelector((state) => state.show);\n  const dispatch = useDispatch();\n\n  const sendDispatch = actionType = {\n\n  }\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>\n        {show ? counter : \"counter not showing\"}\n      </div>\n      <div>\n        <button onClick={() => dispatch({ type: COUNTER_ACTIONS.CUSTOM_INCREMENT, amount: 5 })}>\n          Super Increment\n        </button>\n        <button onClick={() => dispatch({ type: COUNTER_ACTIONS.INCREMENT })}>\n          Increment\n        </button>\n        <button onClick={() => dispatch({ type: COUNTER_ACTIONS.DECREMENT })}>\n          Decrement\n        </button>\n      </div>\n      <button onClick={() => dispatch({ type: COUNTER_ACTIONS.TOGGLE_SHOW })}>\n        Toggle Counter\n      </button>\n    </main >\n  );\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}