{"ast":null,"code":"var _jsxFileName = \"/home/elad/projects/01-starting-project/src/components/Counter.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\nimport { counterActions, secondActions } from \"../store/redux-with-toolkit\";\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const counter = useSelector(state => state.counterSlice.counter);\n  console.log('counter: ', counter);\n  const show = useSelector(state => state.counterSlice.show);\n  console.log('show: ', show);\n  const name = useSelector(state => state.secondSlice.name);\n  console.log('name: ', name);\n  const isAuthenticated = useSelector(state => state.secondSlice.isAuthenticated);\n  console.log('isAuthenticated: ', isAuthenticated);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: show ? counter : \"counter not showing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: [name, isAuthenticated]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"7oED2mbYScoo1Wa3j1jOw+LywP4=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter; // buttons component\n\nconst Buttons = () => {\n  _s2();\n\n  const dispatch = useDispatch();\n  const isToolkit = true;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          !isToolkit ? dispatch({\n            type: COUNTER_ACTIONS.CUSTOM_INCREMENT,\n            payload: 10\n          }) : dispatch(counterActions.customIncrement(10));\n        },\n        children: \"Super Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          !isToolkit ? dispatch({\n            type: COUNTER_ACTIONS.INCREMENT\n          }) : dispatch(counterActions.increment());\n        },\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          !isToolkit ? dispatch({\n            type: COUNTER_ACTIONS.DECREMENT\n          }) : dispatch(counterActions.decrement());\n        },\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        !isToolkit ? dispatch({\n          type: COUNTER_ACTIONS.TOGGLE_SHOW\n        }) : dispatch(counterActions.toggleShow());\n      },\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch(secondActions.changeName());\n        },\n        children: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch(secondActions.toggleAuth());\n        },\n        children: \"auth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Buttons, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = Buttons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"Buttons\");","map":{"version":3,"sources":["/home/elad/projects/01-starting-project/src/components/Counter.js"],"names":["useSelector","useDispatch","COUNTER_ACTIONS","counterActions","secondActions","classes","Counter","counter","state","counterSlice","console","log","show","name","secondSlice","isAuthenticated","value","Buttons","dispatch","isToolkit","type","CUSTOM_INCREMENT","payload","customIncrement","INCREMENT","increment","DECREMENT","decrement","TOGGLE_SHOW","toggleShow","changeName","toggleAuth"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\nimport { counterActions, secondActions } from \"../store/redux-with-toolkit\";\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  const counter = useSelector((state) => state.counterSlice.counter);\n  console.log('counter: ', counter);\n  const show = useSelector((state) => state.counterSlice.show);\n  console.log('show: ', show);\n  const name = useSelector((state) => state.secondSlice.name);\n  console.log('name: ', name);\n  const isAuthenticated = useSelector((state) => state.secondSlice.isAuthenticated);\n  console.log('isAuthenticated: ', isAuthenticated);\n\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>\n        {show ? counter : \"counter not showing\"}\n      </div>\n      <div className={classes.value}>\n        {name}\n        {isAuthenticated}\n      </div>\n      <Buttons />\n    </main >\n  );\n};\n\nexport default Counter;\n\n// buttons component\n\nconst Buttons = () => {\n  const dispatch = useDispatch();\n\n  const isToolkit = true;\n\n  return (\n    <>\n      <div>\n        <button onClick={() => {\n          !isToolkit ? dispatch({ type: COUNTER_ACTIONS.CUSTOM_INCREMENT, payload: 10 }) : dispatch(counterActions.customIncrement(10))\n        }}>\n          Super Increment\n        </button>\n        <button onClick={() => {\n          !isToolkit ? dispatch({ type: COUNTER_ACTIONS.INCREMENT }) : dispatch(counterActions.increment())\n        }}>\n          Increment\n        </button>\n        <button onClick={() => {\n          !isToolkit ? dispatch({ type: COUNTER_ACTIONS.DECREMENT }) : dispatch(counterActions.decrement())\n        }}>\n          Decrement\n        </button>\n      </div>\n      <button onClick={() => {\n        !isToolkit ? dispatch({ type: COUNTER_ACTIONS.TOGGLE_SHOW }) : dispatch(counterActions.toggleShow())\n      }}>\n        Toggle Counter\n      </button>\n      <div>\n        <button onClick={() => {\n          dispatch(secondActions.changeName())\n        }}>\n          name\n        </button>\n        <button onClick={() => {\n          dispatch(secondActions.toggleAuth())\n        }}>\n          auth\n        </button>\n      </div>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}