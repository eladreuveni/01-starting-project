{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  show: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    customIncrement(state, action) {\n      state.counter += action.amount;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    toggleShow(state) {\n      state.show = !state.show;\n    }\n\n  }\n}); // const countReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case \"customIncrement\":\n//       return { ...state, counter: state.counter + action.amount };\n//     case \"increment\":\n//       return { ...state, counter: state.counter + 1 };\n//     case \"decrement\":\n//       return { ...state, counter: state.counter - 1 };\n//     case \"toggleShow\":\n//       return { ...state, show: !state.show };\n//     default:\n//       return state;\n//   }\n// };\n// const store = createStore(countReducer);\n\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;","map":{"version":3,"sources":["/home/elad/projects/01-starting-project/src/store/index.js"],"names":["configureStore","createSlice","createStore","initialState","counter","show","counterSlice","name","reducers","increment","state","customIncrement","action","amount","decrement","toggleShow","store","reducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,YAAY,EAAEA,YAFiB;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KAHO;;AAIRO,IAAAA,eAAe,CAACD,KAAD,EAAQE,MAAR,EAAgB;AAC7BF,MAAAA,KAAK,CAACN,OAAN,IAAiBQ,MAAM,CAACC,MAAxB;AACD,KANO;;AAORC,IAAAA,SAAS,CAACJ,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACN,OAAN;AACD,KATO;;AAURW,IAAAA,UAAU,CAACL,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACL,IAAN,GAAa,CAACK,KAAK,CAACL,IAApB;AACD;;AAZO;AAHqB,CAAD,CAAhC,C,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMW,KAAK,GAAGhB,cAAc,CAAC;AAC3BiB,EAAAA,OAAO,EAAEX,YAAY,CAACW;AADK,CAAD,CAA5B;AAIA,eAAeD,KAAf","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\n\nconst initialState = {\n  counter: 0,\n  show: true,\n};\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    customIncrement(state, action) {\n      state.counter += action.amount;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    toggleShow(state) {\n      state.show = !state.show;\n    },\n  },\n});\n\n// const countReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case \"customIncrement\":\n//       return { ...state, counter: state.counter + action.amount };\n//     case \"increment\":\n//       return { ...state, counter: state.counter + 1 };\n//     case \"decrement\":\n//       return { ...state, counter: state.counter - 1 };\n//     case \"toggleShow\":\n//       return { ...state, show: !state.show };\n//     default:\n//       return state;\n//   }\n// };\n// const store = createStore(countReducer);\n\nconst store = configureStore({\n  reducer: counterSlice.reducer,\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}