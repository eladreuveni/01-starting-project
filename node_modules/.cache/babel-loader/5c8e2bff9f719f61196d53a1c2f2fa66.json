{"ast":null,"code":"var _jsxFileName = \"/home/elad/projects/01-starting-project/src/components/Counter.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\nimport { counterActions } from \"../store/redux-with-toolkit\";\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.show);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: show ? counter : \"counter not showing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"GD/ow9YR7sIjDFYrV2wcllje4n0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter; // buttons component\n\nconst Buttons = ({\n  isToolkit\n}) => {\n  _s2();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          isToolkit ? dispatch({\n            type: COUNTER_ACTIONS.CUSTOM_INCREMENT,\n            payload: 10\n          }) : dispatch(counterActions.customIncrement(10));\n        },\n        children: \"Super Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          isToolkit ? dispatch({\n            type: COUNTER_ACTIONS.INCREMENT\n          }) : dispatch(counterActions.increment());\n        },\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          isToolkit ? dispatch({\n            type: COUNTER_ACTIONS.DECREMENT\n          }) : dispatch(counterActions.decrement());\n        },\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        isToolkit ? dispatch({\n          type: COUNTER_ACTIONS.TOGGLE_SHOW\n        }) : dispatch(counterActions.toggleShow());\n      },\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Buttons, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = Buttons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"Buttons\");","map":{"version":3,"sources":["/home/elad/projects/01-starting-project/src/components/Counter.js"],"names":["useSelector","useDispatch","COUNTER_ACTIONS","counterActions","classes","Counter","counter","state","show","value","Buttons","isToolkit","dispatch","type","CUSTOM_INCREMENT","payload","customIncrement","INCREMENT","increment","DECREMENT","decrement","TOGGLE_SHOW","toggleShow"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,OAAO,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;AACA,QAAME,IAAI,GAAGR,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACE,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACK,KAAxB;AAAA,gBACGD,IAAI,GAAGF,OAAH,GAAa;AADpB;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAbD;;GAAMD,O;UACYL,W,EACHA,W;;;KAFTK,O;AAeN,eAAeA,OAAf,C,CAEA;;AAEA,MAAMK,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACjC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBU,UAAAA,SAAS,GAAGC,QAAQ,CAAC;AAAEC,YAAAA,IAAI,EAAEX,eAAe,CAACY,gBAAxB;AAA0CC,YAAAA,OAAO,EAAE;AAAnD,WAAD,CAAX,GAAuEH,QAAQ,CAACT,cAAc,CAACa,eAAf,CAA+B,EAA/B,CAAD,CAAxF;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBL,UAAAA,SAAS,GAAGC,QAAQ,CAAC;AAAEC,YAAAA,IAAI,EAAEX,eAAe,CAACe;AAAxB,WAAD,CAAX,GAAmDL,QAAQ,CAACT,cAAc,CAACe,SAAf,EAAD,CAApE;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBP,UAAAA,SAAS,GAAGC,QAAQ,CAAC;AAAEC,YAAAA,IAAI,EAAEX,eAAe,CAACiB;AAAxB,WAAD,CAAX,GAAmDP,QAAQ,CAACT,cAAc,CAACiB,SAAf,EAAD,CAApE;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrBT,QAAAA,SAAS,GAAGC,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAEX,eAAe,CAACmB;AAAxB,SAAD,CAAX,GAAqDT,QAAQ,CAACT,cAAc,CAACmB,UAAf,EAAD,CAAtE;AACD,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AA0BD,CA7BD;;IAAMZ,O;UACaT,W;;;MADbS,O","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\nimport { counterActions } from \"../store/redux-with-toolkit\";\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  const counter = useSelector((state) => state.counter);\n  const show = useSelector((state) => state.show);\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>\n        {show ? counter : \"counter not showing\"}\n      </div>\n      <Buttons />\n    </main >\n  );\n};\n\nexport default Counter;\n\n// buttons component\n\nconst Buttons = ({ isToolkit }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div>\n        <button onClick={() => {\n          isToolkit ? dispatch({ type: COUNTER_ACTIONS.CUSTOM_INCREMENT, payload: 10 }) : dispatch(counterActions.customIncrement(10))\n        }}>\n          Super Increment\n        </button>\n        <button onClick={() => {\n          isToolkit ? dispatch({ type: COUNTER_ACTIONS.INCREMENT }) : dispatch(counterActions.increment())\n        }}>\n          Increment\n        </button>\n        <button onClick={() => {\n          isToolkit ? dispatch({ type: COUNTER_ACTIONS.DECREMENT }) : dispatch(counterActions.decrement())\n        }}>\n          Decrement\n        </button>\n      </div>\n      <button onClick={() => {\n        isToolkit ? dispatch({ type: COUNTER_ACTIONS.TOGGLE_SHOW }) : dispatch(counterActions.toggleShow())\n      }}>\n        Toggle Counter\n      </button>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}