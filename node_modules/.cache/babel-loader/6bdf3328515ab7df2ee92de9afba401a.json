{"ast":null,"code":"var _jsxFileName = \"/home/elad/projects/01-starting-project/src/components/Counter.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\n// import myStore, { counterActions, RootState, secondActions } from \"../store/redux-with-toolkit\";\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const counter = useSelector(state => state.counter); // const counter = useSelector((state: RootState) => state.counterSlice.counter);\n\n  const show = useSelector(state => state.show); // const show = useSelector((state: RootState) => state.counterSlice.show);\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: show ? counter : \"I am not allowed to show you number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"GD/ow9YR7sIjDFYrV2wcllje4n0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter;\n\nconst Test = () => {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  const show = useMemo(_s2(() => {\n    _s2();\n\n    return useSelector(state => state.show);\n  }, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n    return [useSelector];\n  }));\n  console.log('show: ', show);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: show ? \"show\" : \"not shows\"\n  }, void 0, false);\n}; // buttons component\n\n\n_s3(Test, \"zuIdBn4FlaQ1IWIQBhXlZDtZmVU=\");\n\n_c2 = Test;\n\nconst Buttons = () => {\n  _s4();\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.counterActions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: COUNTER_ACTIONS.CUSTOM_INCREMENT,\n            payload: 10\n          });\n        },\n        children: \"Super Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: COUNTER_ACTIONS.INCREMENT\n          });\n        },\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: COUNTER_ACTIONS.DECREMENT\n          });\n        },\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch({\n          type: COUNTER_ACTIONS.TOGGLE_SHOW\n        });\n      },\n      children: \"Toggle Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s4(Buttons, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c3 = Buttons;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"Test\");\n$RefreshReg$(_c3, \"Buttons\");","map":{"version":3,"sources":["/home/elad/projects/01-starting-project/src/components/Counter.tsx"],"names":["useMemo","useSelector","useDispatch","COUNTER_ACTIONS","classes","Counter","counter","state","show","value","Test","console","log","Buttons","dispatch","counterActions","type","CUSTOM_INCREMENT","payload","INCREMENT","DECREMENT","TOGGLE_SHOW"],"mappings":";;;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAA2D,aAA3D;AACA,SAASC,eAAT,QAAgC,uBAAhC;AAEA;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,OAAO,GAAGL,WAAW,CAAEM,KAAD,IAAsBA,KAAK,CAACD,OAA7B,CAA3B,CADoB,CAEpB;;AACA,QAAME,IAAI,GAAGP,WAAW,CAAEM,KAAD,IAAsBA,KAAK,CAACC,IAA7B,CAAxB,CAHoB,CAIpB;;AAGA,sBACE;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACE,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACK,KAAxB;AAAA,gBACGD,IAAI,GAAGF,OAAH,GAAa;AADpB;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjBD;;GAAMD,O;UACYJ,W,EAEHA,W;;;KAHTI,O;AAmBN,eAAeA,OAAf;;AAEA,MAAMK,IAAI,GAAG,MAAM;AAAA;;AAAA;;AACjB,QAAMF,IAAI,GAAGR,OAAO,KAAC;AAAA;;AAAA,WAAMC,WAAW,CAAEM,KAAD,IAAsBA,KAAK,CAACC,IAA7B,CAAjB;AAAA,GAAD;AAAA,YAAOP,WAAP;AAAA,KAApB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,IAAtB;AACA,sBAAQ;AAAA,cAAGA,IAAI,GAAG,MAAH,GAAY;AAAnB,mBAAR;AACD,CAJD,C,CAKA;;;IALME,I;;MAAAA,I;;AAON,MAAMG,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEE,OAAO,CAACW,cAAxB;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBD,UAAAA,QAAQ,CAAC;AAAEE,YAAAA,IAAI,EAAEb,eAAe,CAACc,gBAAxB;AAA0CC,YAAAA,OAAO,EAAE;AAAnD,WAAD,CAAR;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBJ,UAAAA,QAAQ,CAAC;AAAEE,YAAAA,IAAI,EAAEb,eAAe,CAACgB;AAAxB,WAAD,CAAR;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBL,UAAAA,QAAQ,CAAC;AAAEE,YAAAA,IAAI,EAAEb,eAAe,CAACiB;AAAxB,WAAD,CAAR;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrBN,QAAAA,QAAQ,CAAC;AAAEE,UAAAA,IAAI,EAAEb,eAAe,CAACkB;AAAxB,SAAD,CAAR;AACD,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AA0BD,CA7BD;;IAAMR,O;UACaX,W;;;MADbW,O","sourcesContent":["import { useMemo } from \"react\";\nimport { useSelector, useDispatch, DefaultRootState } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\nimport { RootState } from \"../store/simple-redux\";\n// import myStore, { counterActions, RootState, secondActions } from \"../store/redux-with-toolkit\";\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  const counter = useSelector((state: RootState) => state.counter);\n  // const counter = useSelector((state: RootState) => state.counterSlice.counter);\n  const show = useSelector((state: RootState) => state.show);\n  // const show = useSelector((state: RootState) => state.counterSlice.show);\n\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>\n        {show ? counter : \"I am not allowed to show you number\"}\n      </div>\n      <Buttons />\n      <Test />\n    </main >\n  );\n};\n\nexport default Counter;\n\nconst Test = () => {\n  const show = useMemo(() => useSelector((state: RootState) => state.show))\n  console.log('show: ', show);\n  return (<>{show ? \"show\" : \"not shows\"}</>)\n}\n// buttons component\n\nconst Buttons = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div className={classes.counterActions}>\n        <button onClick={() => {\n          dispatch({ type: COUNTER_ACTIONS.CUSTOM_INCREMENT, payload: 10 })\n        }}>\n          Super Increment\n        </button>\n        <button onClick={() => {\n          dispatch({ type: COUNTER_ACTIONS.INCREMENT })\n        }}>\n          Increment\n        </button>\n        <button onClick={() => {\n          dispatch({ type: COUNTER_ACTIONS.DECREMENT })\n        }}>\n          Decrement\n        </button>\n      </div>\n      <button onClick={() => {\n        dispatch({ type: COUNTER_ACTIONS.TOGGLE_SHOW })\n      }}>\n        Toggle Show\n      </button>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}