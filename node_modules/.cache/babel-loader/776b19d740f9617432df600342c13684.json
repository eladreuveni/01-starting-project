{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { INITIAL_STATE } from \"./redux-consts\";\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    increment(state) {\n      console.log('state: ', state);\n      state.counter++;\n    },\n\n    customIncrement(state, action) {\n      state.counter += action.payload;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    toggleShow(state) {\n      state.show = !state.show;\n    }\n\n  }\n});\nexport const counterActions = counterSlice.actions;\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;","map":{"version":3,"sources":["/home/elad/projects/01-starting-project/src/store/redux-with-toolkit.js"],"names":["configureStore","createSlice","INITIAL_STATE","counterSlice","name","initialState","reducers","increment","state","console","log","counter","customIncrement","action","payload","decrement","toggleShow","show","counterActions","actions","store","reducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,MAAMC,YAAY,GAAGF,WAAW,CAAC;AAC/BG,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEH,aAFiB;AAG/BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACAA,MAAAA,KAAK,CAACG,OAAN;AACD,KAJO;;AAKRC,IAAAA,eAAe,CAACJ,KAAD,EAAQK,MAAR,EAAgB;AAC7BL,MAAAA,KAAK,CAACG,OAAN,IAAiBE,MAAM,CAACC,OAAxB;AACD,KAPO;;AAQRC,IAAAA,SAAS,CAACP,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACG,OAAN;AACD,KAVO;;AAWRK,IAAAA,UAAU,CAACR,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACS,IAAN,GAAa,CAACT,KAAK,CAACS,IAApB;AACD;;AAbO;AAHqB,CAAD,CAAhC;AAoBA,OAAO,MAAMC,cAAc,GAAGf,YAAY,CAACgB,OAApC;AAEP,MAAMC,KAAK,GAAGpB,cAAc,CAAC;AAC3BqB,EAAAA,OAAO,EAAElB,YAAY,CAACkB;AADK,CAAD,CAA5B;AAIA,eAAeD,KAAf","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { INITIAL_STATE } from \"./redux-consts\";\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    increment(state) {\n      console.log('state: ', state);\n      state.counter++;\n    },\n    customIncrement(state, action) {\n      state.counter += action.payload;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    toggleShow(state) {\n      state.show = !state.show;\n    },\n  },\n});\n\nexport const counterActions = counterSlice.actions;\n\nconst store = configureStore({\n  reducer: counterSlice.reducer,\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}