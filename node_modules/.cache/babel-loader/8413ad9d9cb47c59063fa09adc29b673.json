{"ast":null,"code":"var _jsxFileName = \"/home/elad/projects/01-starting-project/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.show);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: show ? counter : \"counter not showing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: \"customIncrement\",\n          amount: 5\n        }),\n        children: \"Super Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: \"increment\"\n        }),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: \"decrement\"\n        }),\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"toggleShow\"\n      }),\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"6LcjmzGwbakCfSm2kUDyfwG8ChU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/home/elad/projects/01-starting-project/src/components/Counter.js"],"names":["useSelector","useDispatch","classes","Counter","counter","state","show","dispatch","value","type","amount"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,OAAO,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;AACA,QAAME,IAAI,GAAGN,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACE,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACM,KAAxB;AAAA,gBACGF,IAAI,GAAGF,OAAH,GAAa;AADpB;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA,8BACE;AACE,QAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAAEE,UAAAA,IAAI,EAAE,iBAAR;AAA2BC,UAAAA,MAAM,EAAE;AAAnC,SAAD,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,OAAO,EAAE,MAAMH,QAAQ,CAAC;AAAEE,UAAAA,IAAI,EAAE;AAAR,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAQ,QAAA,OAAO,EAAE,MAAMF,QAAQ,CAAC;AAAEE,UAAAA,IAAI,EAAE;AAAR,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAkBE;AAAQ,MAAA,OAAO,EAAE,MAAMF,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA7BD;;GAAMN,O;UACYH,W,EACHA,W,EACIC,W;;;KAHbE,O;AA+BN,eAAeA,OAAf","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  const counter = useSelector((state) => state.counter);\n  const show = useSelector((state) => state.show);\n  const dispatch = useDispatch();\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>\n        {show ? counter : \"counter not showing\"}\n      </div>\n      <div>\n        <button\n          onClick={() => dispatch({ type: \"customIncrement\", amount: 5 })}\n        >\n          Super Increment\n        </button>\n        <button onClick={() => dispatch({ type: \"increment\" })}>\n          Increment\n        </button>\n        <button onClick={() => dispatch({ type: \"decrement\" })}>\n          Decrement\n        </button>\n      </div>\n      <button onClick={() => dispatch({ type: \"toggleShow\" })}>\n        Toggle Counter\n      </button>\n    </main>\n  );\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}