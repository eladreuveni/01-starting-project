{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { INITIAL_COUNTER_STATE, INITIAL_SECOND_STATE } from \"./redux-consts\";\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: INITIAL_COUNTER_STATE,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    customIncrement(state, action) {\n      state.counter += action.payload;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    toggleShow(state) {\n      state.show = !state.show;\n    }\n\n  }\n});\nconst secondSlice = createSlice({\n  name: \"second\",\n  initialState: INITIAL_SECOND_STATE,\n  reducers: {\n    changeName(state) {\n      state.name += \"a\";\n    },\n\n    toggleAuth(state) {\n      state.isAuthenticated = !state.isAuthenticated;\n    }\n\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const secondActions = secondSlice.actions;\nconst store = configureStore({\n  reducer: {\n    \"counter\": counterSlice.reducer,\n    \"second\": secondSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["/home/elad/projects/01-starting-project/src/store/redux-with-toolkit.js"],"names":["configureStore","createSlice","INITIAL_COUNTER_STATE","INITIAL_SECOND_STATE","counterSlice","name","initialState","reducers","increment","state","counter","customIncrement","action","payload","decrement","toggleShow","show","secondSlice","changeName","toggleAuth","isAuthenticated","counterActions","actions","secondActions","store","reducer"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AACA,SAASC,qBAAT,EAAgCC,oBAAhC,QAA4D,gBAA5D;AAEA,MAAMC,YAAY,GAAGH,WAAW,CAAC;AAC/BI,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEJ,qBAFiB;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACC,OAAN;AACD,KAHO;;AAIRC,IAAAA,eAAe,CAACF,KAAD,EAAQG,MAAR,EAAgB;AAC7BH,MAAAA,KAAK,CAACC,OAAN,IAAiBE,MAAM,CAACC,OAAxB;AACD,KANO;;AAORC,IAAAA,SAAS,CAACL,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACC,OAAN;AACD,KATO;;AAURK,IAAAA,UAAU,CAACN,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACO,IAAN,GAAa,CAACP,KAAK,CAACO,IAApB;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMC,WAAW,GAAGhB,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,YAAY,EAAEH,oBAFgB;AAG9BI,EAAAA,QAAQ,EAAE;AACRW,IAAAA,UAAU,CAACT,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACJ,IAAN,IAAc,GAAd;AACD,KAHO;;AAIRc,IAAAA,UAAU,CAACV,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACW,eAAN,GAAwB,CAACX,KAAK,CAACW,eAA/B;AACD;;AANO;AAHoB,CAAD,CAA/B;AAaA,OAAO,MAAMC,cAAc,GAAGjB,YAAY,CAACkB,OAApC;AAEP,OAAO,MAAMC,aAAa,GAAGN,WAAW,CAACK,OAAlC;AAEP,MAAME,KAAK,GAAGxB,cAAc,CAAC;AAC3ByB,EAAAA,OAAO,EAAE;AAAE,eAAWrB,YAAY,CAACqB,OAA1B;AAAmC,cAAUR,WAAW,CAACQ;AAAzD;AADkB,CAAD,CAA5B;AAIA,eAAeD,KAAf","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { INITIAL_COUNTER_STATE, INITIAL_SECOND_STATE } from \"./redux-consts\";\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: INITIAL_COUNTER_STATE,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    customIncrement(state, action) {\n      state.counter += action.payload;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    toggleShow(state) {\n      state.show = !state.show;\n    },\n  },\n});\n\nconst secondSlice = createSlice({\n  name: \"second\",\n  initialState: INITIAL_SECOND_STATE,\n  reducers: {\n    changeName(state) {\n      state.name += \"a\";\n    },\n    toggleAuth(state) {\n      state.isAuthenticated = !state.isAuthenticated;\n    },\n  },\n});\n\nexport const counterActions = counterSlice.actions;\n\nexport const secondActions = secondSlice.actions;\n\nconst store = configureStore({\n  reducer: { \"counter\": counterSlice.reducer, \"second\": secondSlice.reducer },\n});\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}