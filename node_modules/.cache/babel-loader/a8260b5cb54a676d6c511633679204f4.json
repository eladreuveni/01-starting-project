{"ast":null,"code":"var _jsxFileName = \"/home/elad/projects/01-starting-project/src/components/Counter.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.show); // choose one\n\n  const WHICH_REDUX = \"Vanilla\"; // const WHICH_REDUX = \"Toolkit\";\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: show ? counter : \"counter not showing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"GD/ow9YR7sIjDFYrV2wcllje4n0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter;\n\nconst Buttons = ({\n  WHICH_REDUX\n}) => {\n  _s2();\n\n  const dispatch = useDispatch();\n\n  const sendDispatch = (actionType, payload) => {\n    // payload ? dispatch(actionType, payload && payload) : dispatch(type);\n    dispatch(actionType, payload && payload);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: COUNTER_ACTIONS.CUSTOM_INCREMENT,\n          amount: 5\n        }),\n        children: \"Super Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: COUNTER_ACTIONS.INCREMENT\n        }),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: COUNTER_ACTIONS.DECREMENT\n        }),\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: COUNTER_ACTIONS.TOGGLE_SHOW\n      }),\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Buttons, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = Buttons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"Buttons\");","map":{"version":3,"sources":["/home/elad/projects/01-starting-project/src/components/Counter.js"],"names":["useSelector","useDispatch","COUNTER_ACTIONS","classes","Counter","counter","state","show","WHICH_REDUX","value","Buttons","dispatch","sendDispatch","actionType","payload","type","CUSTOM_INCREMENT","amount","INCREMENT","DECREMENT","TOGGLE_SHOW"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,OAAO,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;AACA,QAAME,IAAI,GAAGP,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB,CAFoB,CAIpB;;AACA,QAAMC,WAAW,GAAG,SAApB,CALoB,CAMpB;;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEL,OAAO,CAACE,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACM,KAAxB;AAAA,gBACGF,IAAI,GAAGF,OAAH,GAAa;AADpB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhBD;;GAAMD,O;UACYJ,W,EACHA,W;;;KAFTI,O;AAkBN,eAAeA,OAAf;;AAEA,MAAMM,OAAO,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AACnC,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,YAAY,GAAG,CAACC,UAAD,EAAaC,OAAb,KAAyB;AAC5C;AACAH,IAAAA,QAAQ,CAACE,UAAD,EAAaC,OAAO,IAAIA,OAAxB,CAAR;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMH,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAEb,eAAe,CAACc,gBAAxB;AAA0CC,UAAAA,MAAM,EAAE;AAAlD,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAMN,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAEb,eAAe,CAACgB;AAAxB,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAMP,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAEb,eAAe,CAACiB;AAAxB,SAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAQ,MAAA,OAAO,EAAE,MAAMR,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEb,eAAe,CAACkB;AAAxB,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAkBD,CA1BD;;IAAMV,O;UACaT,W;;;MADbS,O","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  const counter = useSelector((state) => state.counter);\n  const show = useSelector((state) => state.show);\n\n  // choose one\n  const WHICH_REDUX = \"Vanilla\";\n  // const WHICH_REDUX = \"Toolkit\";\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>\n        {show ? counter : \"counter not showing\"}\n      </div>\n    </main >\n  );\n};\n\nexport default Counter;\n\nconst Buttons = ({ WHICH_REDUX }) => {\n  const dispatch = useDispatch();\n\n  const sendDispatch = (actionType, payload) => {\n    // payload ? dispatch(actionType, payload && payload) : dispatch(type);\n    dispatch(actionType, payload && payload)\n  }\n\n  return (\n    <>\n      <div>\n        <button onClick={() => dispatch({ type: COUNTER_ACTIONS.CUSTOM_INCREMENT, amount: 5 })}>\n          Super Increment\n        </button>\n        <button onClick={() => dispatch({ type: COUNTER_ACTIONS.INCREMENT })}>\n          Increment\n        </button>\n        <button onClick={() => dispatch({ type: COUNTER_ACTIONS.DECREMENT })}>\n          Decrement\n        </button>\n      </div>\n      <button onClick={() => dispatch({ type: COUNTER_ACTIONS.TOGGLE_SHOW })}>\n        Toggle Counter\n      </button>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}