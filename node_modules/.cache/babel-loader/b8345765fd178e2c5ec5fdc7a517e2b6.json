{"ast":null,"code":"var _jsxFileName = \"/home/elad/projects/01-starting-project/src/components/Counter.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\n// import myStore, { counterActions, RootState, secondActions } from \"../store/redux-with-toolkit\";\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  // const counter = useSelector((state: RootState) => state.counterSlice.counter);\n  // const show = useSelector((state: RootState) => state.counterSlice.show);\n  // const name = useSelector((state: RootState) => state.secondSlice.name);\n  console.log(\"counter\");\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Counter;\nexport default Counter; // buttons component\n\nconst Buttons = () => {\n  _s();\n\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.show);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [show ? counter : \"I am not allowed to show you number\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: COUNTER_ACTIONS.CUSTOM_INCREMENT,\n            payload: 10\n          });\n        },\n        children: \"Super Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: COUNTER_ACTIONS.INCREMENT\n          });\n        },\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: COUNTER_ACTIONS.DECREMENT\n          });\n        },\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch({\n          type: COUNTER_ACTIONS.TOGGLE_SHOW\n        });\n      },\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Buttons, \"6LcjmzGwbakCfSm2kUDyfwG8ChU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c2 = Buttons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"Buttons\");","map":{"version":3,"sources":["/home/elad/projects/01-starting-project/src/components/Counter.tsx"],"names":["useSelector","useDispatch","COUNTER_ACTIONS","classes","Counter","console","log","counter","value","Buttons","state","show","dispatch","type","CUSTOM_INCREMENT","payload","INCREMENT","DECREMENT","TOGGLE_SHOW"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAA2D,aAA3D;AACA,SAASC,eAAT,QAAgC,uBAAhC;AAEA;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB;AACA;AACA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEH,OAAO,CAACI,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACK;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACK;AAAxB;AAAA;AAAA;AAAA;AAAA,YALF,eAQE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnBD;;KAAMJ,O;AAqBN,eAAeA,OAAf,C,CAEA;;AAEA,MAAMK,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMF,OAAO,GAAGP,WAAW,CAAEU,KAAD,IAAsBA,KAAK,CAACH,OAA7B,CAA3B;AACA,QAAMI,IAAI,GAAGX,WAAW,CAAEU,KAAD,IAAsBA,KAAK,CAACC,IAA7B,CAAxB;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,sBACE;AAAA,4BACE;AAAA,iBACGU,IAAI,GAAGJ,OAAH,GAAY,qCADnB,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBK,UAAAA,QAAQ,CAAC;AAAEC,YAAAA,IAAI,EAAEX,eAAe,CAACY,gBAAxB;AAA0CC,YAAAA,OAAO,EAAE;AAAnD,WAAD,CAAR;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBH,UAAAA,QAAQ,CAAC;AAAEC,YAAAA,IAAI,EAAEX,eAAe,CAACc;AAAxB,WAAD,CAAR;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAYE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBJ,UAAAA,QAAQ,CAAC;AAAEC,YAAAA,IAAI,EAAEX,eAAe,CAACe;AAAxB,WAAD,CAAR;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrBL,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAEX,eAAe,CAACgB;AAAxB,SAAD,CAAR;AACD,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA,kBADF;AA2BD,CAhCD;;GAAMT,O;UACYT,W,EACHA,W,EACIC,W;;;MAHbQ,O","sourcesContent":["import { useSelector, useDispatch, DefaultRootState } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\nimport { RootState } from \"../store/simple-redux\";\n// import myStore, { counterActions, RootState, secondActions } from \"../store/redux-with-toolkit\";\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  // const counter = useSelector((state: RootState) => state.counterSlice.counter);\n  // const show = useSelector((state: RootState) => state.counterSlice.show);\n  // const name = useSelector((state: RootState) => state.secondSlice.name);\n\n  console.log(\"counter\");\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>\n        {/* {show ? counter : \"counter not showing\"} */}\n      </div>\n      <div className={classes.value}>\n        {/* {name} */}\n      </div>\n      <Buttons />\n    </main >\n  );\n};\n\nexport default Counter;\n\n// buttons component\n\nconst Buttons = () => {\n  const counter = useSelector((state: RootState) => state.counter);\n  const show = useSelector((state: RootState) => state.show);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <div>\n        {show ? counter: \"I am not allowed to show you number\"}\n        <button onClick={() => {\n          dispatch({ type: COUNTER_ACTIONS.CUSTOM_INCREMENT, payload: 10 })\n        }}>\n          Super Increment\n        </button>\n        <button onClick={() => {\n          dispatch({ type: COUNTER_ACTIONS.INCREMENT })\n        }}>\n          Increment\n        </button>\n        <button onClick={() => {\n          dispatch({ type: COUNTER_ACTIONS.DECREMENT })\n        }}>\n          Decrement\n        </button>\n      </div>\n      <button onClick={() => {\n        dispatch({ type: COUNTER_ACTIONS.TOGGLE_SHOW })\n      }}>\n        Toggle Counter\n      </button>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}