{"ast":null,"code":"var _jsxFileName = \"/home/elad/projects/01-starting-project/src/components/Counter.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\n// import myStore, { counterActions, RootState, secondActions } from \"../store/redux-with-toolkit\";\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  // const counter = useSelector((state: RootState) => state.counterSlice.counter);\n  // const show = useSelector((state: RootState) => state.counterSlice.show);\n  // const name = useSelector((state: RootState) => state.secondSlice.name);\n  console.log(\"counter\");\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Counter;\nexport default Counter; // buttons component\n\nconst Buttons = () => {\n  _s();\n\n  const counter = useSelector(state => state.counter);\n  const dispatch = useDispatch();\n  const xCtx = useX();\n  console.log(xCtx.x);\n  console.log(\"buttons\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [counter, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: COUNTER_ACTIONS.CUSTOM_INCREMENT,\n            payload: 10\n          });\n          xCtx.setX(xCtx.x + 1);\n        },\n        children: \"Super Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: COUNTER_ACTIONS.INCREMENT\n          });\n        },\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: COUNTER_ACTIONS.DECREMENT\n          });\n        },\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch({\n          type: COUNTER_ACTIONS.TOGGLE_SHOW\n        });\n      },\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Buttons, \"vzM8FKVVQOQfGS6oA5U8ewPFSlQ=\", false, function () {\n  return [useSelector, useDispatch, useX];\n});\n\n_c2 = Buttons;\n\nconst Test = () => {\n  console.log(\"test\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c3 = Test;\nconst Context = /*#__PURE__*/createContext({});\nexport const XProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      x,\n      setX,\n      y,\n      setY\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(XProvider, \"5ktbIWa127cjFL72iUfyHXgs40w=\");\n\n_c4 = XProvider;\n\nconst useX = () => {\n  _s3();\n\n  return useContext(Context);\n};\n\n_s3(useX, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"Buttons\");\n$RefreshReg$(_c3, \"Test\");\n$RefreshReg$(_c4, \"XProvider\");","map":{"version":3,"sources":["/home/elad/projects/01-starting-project/src/components/Counter.tsx"],"names":["createContext","useContext","useState","useSelector","useDispatch","COUNTER_ACTIONS","classes","Counter","console","log","counter","value","Buttons","state","dispatch","xCtx","useX","x","type","CUSTOM_INCREMENT","payload","setX","INCREMENT","DECREMENT","TOGGLE_SHOW","Test","Context","XProvider","children","y","setY"],"mappings":"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","sourcesContent":["import { createContext, Dispatch, FC, useContext, useState } from \"react\";\nimport { useSelector, useDispatch, DefaultRootState } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\nimport { RootState } from \"../store/simple-redux\";\n// import myStore, { counterActions, RootState, secondActions } from \"../store/redux-with-toolkit\";\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  // const counter = useSelector((state: RootState) => state.counterSlice.counter);\n  // const show = useSelector((state: RootState) => state.counterSlice.show);\n  // const name = useSelector((state: RootState) => state.secondSlice.name);\n\n  console.log(\"counter\");\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>\n        {/* {show ? counter : \"counter not showing\"} */}\n      </div>\n      <div className={classes.value}>\n        {/* {name} */}\n      </div>\n      <XProvider>\n        <Buttons />\n        <Test />\n      </XProvider>\n    </main >\n  );\n};\n\nexport default Counter;\n\n// buttons component\n\nconst Buttons = () => {\n  const counter = useSelector((state: RootState) => state.counter);\n  const dispatch = useDispatch();\n  const xCtx = useX();\n  console.log(xCtx.x);\n  console.log(\"buttons\");\n\n  return (\n    <>\n      <div>\n        {counter}\n        <button onClick={() => {\n          dispatch({ type: COUNTER_ACTIONS.CUSTOM_INCREMENT, payload: 10 }); xCtx.setX(xCtx.x + 1)\n        }}>\n          Super Increment\n        </button>\n        <button onClick={() => {\n          dispatch({ type: COUNTER_ACTIONS.INCREMENT })\n        }}>\n          Increment\n        </button>\n        <button onClick={() => {\n          dispatch({ type: COUNTER_ACTIONS.DECREMENT })\n        }}>\n          Decrement\n        </button>\n      </div>\n      <button onClick={() => {\n        dispatch({ type: COUNTER_ACTIONS.TOGGLE_SHOW })\n      }}>\n        Toggle Counter\n      </button>\n      {/* <div>\n        <button onClick={() => {\n          dispatch(secondActions.changeName())\n        }}>\n          name\n        </button>\n        <button onClick={() => {\n          dispatch(secondActions.toggleAuth())\n        }}>\n          auth\n        </button>\n      </div> */}\n    </>\n  )\n}\n\nconst Test = () => {\n  console.log(\"test\");\n\n  return (<></>)\n}\n\ninterface ContextValue {\n  x: number,\n  setX: Dispatch<React.SetStateAction<number>>,\n  y: number,\n  setY: Dispatch<React.SetStateAction<number>>\n}\nconst Context = createContext<ContextValue>({} as ContextValue)\n\nexport const XProvider: FC = ({ children }) => {\n  const [x, setX] = useState(0)\n  const [y, setY] = useState(0)\n  return (\n    <Context.Provider\n      value={{ x, setX, y, setY }}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\nconst useX = () => useContext(Context)!"]},"metadata":{},"sourceType":"module"}