{"ast":null,"code":"var _jsxFileName = \"/home/elad/projects/01-starting-project/src/components/Counter.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\n// import myStore, { counterActions, RootState, secondActions } from \"../store/redux-with-toolkit\";\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const counter = useSelector(state => state.counter); // const counter = useSelector((state: RootState) => state.counterSlice.counter);\n\n  const show = useSelector(state => state.show); // const show = useSelector((state: RootState) => state.counterSlice.show);\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: show ? counter : \"I am not allowed to show you number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"GD/ow9YR7sIjDFYrV2wcllje4n0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter; // buttons component\n\nconst Buttons = () => {\n  _s2();\n\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter);\n  console.log('counter: ', counter);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.counterActions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: COUNTER_ACTIONS.CUSTOM_INCREMENT,\n            payload: 10\n          });\n        },\n        children: \"Super Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: COUNTER_ACTIONS.INCREMENT\n          });\n        },\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          dispatch({\n            type: COUNTER_ACTIONS.DECREMENT\n          });\n        },\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch({\n          type: COUNTER_ACTIONS.TOGGLE_SHOW\n        });\n      },\n      children: \"Toggle Show\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Buttons, \"gthwM6sqboLtlTmr2wLRFX51eJQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = Buttons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"Buttons\");","map":{"version":3,"sources":["/home/elad/projects/01-starting-project/src/components/Counter.tsx"],"names":["useSelector","useDispatch","COUNTER_ACTIONS","classes","Counter","counter","state","show","value","Buttons","dispatch","console","log","counterActions","type","CUSTOM_INCREMENT","payload","INCREMENT","DECREMENT","TOGGLE_SHOW"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAA2D,aAA3D;AACA,SAASC,eAAT,QAAgC,uBAAhC;AAEA;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,OAAO,GAAGL,WAAW,CAAEM,KAAD,IAAsBA,KAAK,CAACD,OAA7B,CAA3B,CADoB,CAEpB;;AACA,QAAME,IAAI,GAAGP,WAAW,CAAEM,KAAD,IAAsBA,KAAK,CAACC,IAA7B,CAAxB,CAHoB,CAIpB;;AAGA,sBACE;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACE,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACK,KAAxB;AAAA,gBACGD,IAAI,GAAGF,OAAH,GAAa;AADpB;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAhBD;;GAAMD,O;UACYJ,W,EAEHA,W;;;KAHTI,O;AAkBN,eAAeA,OAAf,C,CAEA;;AAEA,MAAMK,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMI,OAAO,GAAGL,WAAW,CAAEM,KAAD,IAAsBA,KAAK,CAACD,OAA7B,CAA3B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBP,OAAzB;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACU,cAAxB;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBH,UAAAA,QAAQ,CAAC;AAAEI,YAAAA,IAAI,EAAEZ,eAAe,CAACa,gBAAxB;AAA0CC,YAAAA,OAAO,EAAE;AAAnD,WAAD,CAAR;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBN,UAAAA,QAAQ,CAAC;AAAEI,YAAAA,IAAI,EAAEZ,eAAe,CAACe;AAAxB,WAAD,CAAR;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBP,UAAAA,QAAQ,CAAC;AAAEI,YAAAA,IAAI,EAAEZ,eAAe,CAACgB;AAAxB,WAAD,CAAR;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrBR,QAAAA,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAEZ,eAAe,CAACiB;AAAxB,SAAD,CAAR;AACD,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AA0BD,CA/BD;;IAAMV,O;UACaR,W,EACDD,W;;;MAFZS,O","sourcesContent":["import { useSelector, useDispatch, DefaultRootState } from \"react-redux\";\nimport { COUNTER_ACTIONS } from \"../store/redux-consts\";\nimport { RootState } from \"../store/simple-redux\";\n// import myStore, { counterActions, RootState, secondActions } from \"../store/redux-with-toolkit\";\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  const counter = useSelector((state: RootState) => state.counter);\n  // const counter = useSelector((state: RootState) => state.counterSlice.counter);\n  const show = useSelector((state: RootState) => state.show);\n  // const show = useSelector((state: RootState) => state.counterSlice.show);\n\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>\n        {show ? counter : \"I am not allowed to show you number\"}\n      </div>\n      <Buttons />\n    </main >\n  );\n};\n\nexport default Counter;\n\n// buttons component\n\nconst Buttons = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector((state: RootState) => state.counter);\n  console.log('counter: ', counter);\n\n  return (\n    <>\n      <div className={classes.counterActions}>\n        <button onClick={() => {\n          dispatch({ type: COUNTER_ACTIONS.CUSTOM_INCREMENT, payload: 10 })\n        }}>\n          Super Increment\n        </button>\n        <button onClick={() => {\n          dispatch({ type: COUNTER_ACTIONS.INCREMENT })\n        }}>\n          Increment\n        </button>\n        <button onClick={() => {\n          dispatch({ type: COUNTER_ACTIONS.DECREMENT })\n        }}>\n          Decrement\n        </button>\n      </div>\n      <button onClick={() => {\n        dispatch({ type: COUNTER_ACTIONS.TOGGLE_SHOW })\n      }}>\n        Toggle Show\n      </button>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}